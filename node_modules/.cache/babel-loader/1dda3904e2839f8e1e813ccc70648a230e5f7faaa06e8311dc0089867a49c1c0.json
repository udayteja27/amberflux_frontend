{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\udayt\\\\Downloads\\\\mern-screen-recorder\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://amberflux-backend.onrender.com\";\nfunction App() {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [videoURL, setVideoURL] = useState(null);\n  const [recordings, setRecordings] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const chunksRef = useRef([]);\n  const timerRef = useRef(null);\n\n  // Fetch recordings list from backend\n  useEffect(() => {\n    fetchRecordings();\n  }, []);\n  const fetchRecordings = async () => {\n    try {\n      const res = await axios.get(API_URL);\n      setRecordings(res.data);\n    } catch (err) {\n      console.error(\"Error fetching recordings\", err);\n    }\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      chunksRef.current = [];\n      recorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          chunksRef.current.push(e.data);\n        }\n      };\n      recorder.onstop = () => {\n        const blob = new Blob(chunksRef.current, {\n          type: \"video/webm\"\n        });\n        const url = URL.createObjectURL(blob);\n        setVideoURL(url);\n      };\n      recorder.start();\n      setMediaRecorder(recorder);\n      setRecording(true);\n      setTimer(0);\n\n      // Timer interval\n      timerRef.current = setInterval(() => {\n        setTimer(prev => {\n          if (prev >= 180) {\n            stopRecording();\n            return prev;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n    } catch (err) {\n      console.error(\"Error starting recording\", err);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state !== \"inactive\") {\n      mediaRecorder.stop();\n      mediaRecorder.stream.getTracks().forEach(track => track.stop());\n    }\n    setRecording(false);\n    if (timerRef.current) clearInterval(timerRef.current);\n  };\n  const downloadRecording = () => {\n    if (!videoURL) return;\n    const a = document.createElement(\"a\");\n    a.href = videoURL;\n    a.download = \"recording.webm\";\n    a.click();\n  };\n  const uploadRecording = async () => {\n    if (!chunksRef.current.length) return;\n    const blob = new Blob(chunksRef.current, {\n      type: \"video/webm\"\n    });\n    const formData = new FormData();\n    formData.append(\"video\", blob, \"recording.webm\");\n    try {\n      await axios.post(\"https://amberflux-backend.onrender.com\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Uploaded successfully ✅\");\n      fetchRecordings();\n    } catch (err) {\n      var _err$response;\n      console.error(\"Upload failed\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      alert(\"Upload failed ❌\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\uD83C\\uDFA5 MERN Screen Recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [!recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        className: \"px-4 py-2 bg-green-600 text-white rounded\",\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        className: \"px-4 py-2 bg-red-600 text-white rounded\",\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-4 font-mono\",\n        children: [\"\\u23F1 \", Math.floor(timer / 60), \":\", String(timer % 60).padStart(2, \"0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), videoURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoURL,\n        controls: true,\n        className: \"w-full border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadRecording,\n          className: \"px-3 py-1 bg-blue-600 text-white rounded\",\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadRecording,\n          className: \"px-3 py-1 bg-purple-600 text-white rounded\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: \"\\uD83D\\uDCC2 Uploaded Recordings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2\",\n      children: recordings.map(rec => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border p-2 rounded flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: rec.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://amberflux-backend.onrender.com/api/recordings/${rec.id}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          className: \"text-blue-600 underline\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, rec.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PVn15WWzjlHTklhBv6+MCrhQBlA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","API_URL","App","_s","recording","setRecording","mediaRecorder","setMediaRecorder","videoURL","setVideoURL","recordings","setRecordings","timer","setTimer","chunksRef","timerRef","fetchRecordings","res","get","data","err","console","error","startRecording","stream","navigator","mediaDevices","getDisplayMedia","video","audio","recorder","MediaRecorder","current","ondataavailable","e","size","push","onstop","blob","Blob","type","url","URL","createObjectURL","start","setInterval","prev","stopRecording","state","stop","getTracks","forEach","track","clearInterval","downloadRecording","a","document","createElement","href","download","click","uploadRecording","length","formData","FormData","append","post","headers","alert","_err$response","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Math","floor","String","padStart","src","controls","map","rec","filename","id","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/udayt/Downloads/mern-screen-recorder/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"https://amberflux-backend.onrender.com\";\r\n\r\nfunction App() {\r\n  const [recording, setRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [videoURL, setVideoURL] = useState(null);\r\n  const [recordings, setRecordings] = useState([]);\r\n  const [timer, setTimer] = useState(0);\r\n  const chunksRef = useRef([]);\r\n  const timerRef = useRef(null);\r\n\r\n  // Fetch recordings list from backend\r\n  useEffect(() => {\r\n    fetchRecordings();\r\n  }, []);\r\n\r\n  const fetchRecordings = async () => {\r\n    try {\r\n      const res = await axios.get(API_URL);\r\n      setRecordings(res.data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching recordings\", err);\r\n    }\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n\r\n      const recorder = new MediaRecorder(stream);\r\n      chunksRef.current = [];\r\n\r\n      recorder.ondataavailable = (e) => {\r\n        if (e.data.size > 0) {\r\n          chunksRef.current.push(e.data);\r\n        }\r\n      };\r\n\r\n      recorder.onstop = () => {\r\n        const blob = new Blob(chunksRef.current, { type: \"video/webm\" });\r\n        const url = URL.createObjectURL(blob);\r\n        setVideoURL(url);\r\n      };\r\n\r\n      recorder.start();\r\n      setMediaRecorder(recorder);\r\n      setRecording(true);\r\n      setTimer(0);\r\n\r\n      // Timer interval\r\n      timerRef.current = setInterval(() => {\r\n        setTimer((prev) => {\r\n          if (prev >= 180) {\r\n            stopRecording();\r\n            return prev;\r\n          }\r\n          return prev + 1;\r\n        });\r\n      }, 1000);\r\n    } catch (err) {\r\n      console.error(\"Error starting recording\", err);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder && mediaRecorder.state !== \"inactive\") {\r\n      mediaRecorder.stop();\r\n      mediaRecorder.stream.getTracks().forEach((track) => track.stop());\r\n    }\r\n    setRecording(false);\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n  };\r\n\r\n  const downloadRecording = () => {\r\n    if (!videoURL) return;\r\n    const a = document.createElement(\"a\");\r\n    a.href = videoURL;\r\n    a.download = \"recording.webm\";\r\n    a.click();\r\n  };\r\n\r\n  const uploadRecording = async () => {\r\n  if (!chunksRef.current.length) return;\r\n\r\n  const blob = new Blob(chunksRef.current, { type: \"video/webm\" });\r\n  const formData = new FormData();\r\n  formData.append(\"video\", blob, \"recording.webm\");\r\n\r\n  try {\r\n    await axios.post(\"https://amberflux-backend.onrender.com\", formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    alert(\"Uploaded successfully ✅\");\r\n    fetchRecordings();\r\n  } catch (err) {\r\n    console.error(\"Upload failed\", err.response?.data || err.message);\r\n    alert(\"Upload failed ❌\");\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-3xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">🎥 MERN Screen Recorder</h1>\r\n\r\n      {/* Controls */}\r\n      <div className=\"mb-4\">\r\n        {!recording ? (\r\n          <button\r\n            onClick={startRecording}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Start Recording\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={stopRecording}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded\"\r\n          >\r\n            Stop Recording\r\n          </button>\r\n        )}\r\n        <span className=\"ml-4 font-mono\">\r\n          ⏱ {Math.floor(timer / 60)}:{String(timer % 60).padStart(2, \"0\")}\r\n        </span>\r\n      </div>\r\n\r\n      {/* Preview */}\r\n      {videoURL && (\r\n        <div className=\"mb-4\">\r\n          <video src={videoURL} controls className=\"w-full border rounded\" />\r\n          <div className=\"mt-2 flex gap-2\">\r\n            <button\r\n              onClick={downloadRecording}\r\n              className=\"px-3 py-1 bg-blue-600 text-white rounded\"\r\n            >\r\n              Download\r\n            </button>\r\n            <button\r\n              onClick={uploadRecording}\r\n              className=\"px-3 py-1 bg-purple-600 text-white rounded\"\r\n            >\r\n              Upload\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Uploaded list */}\r\n      <h2 className=\"text-xl font-semibold mb-2\">📂 Uploaded Recordings</h2>\r\n      <ul className=\"space-y-2\">\r\n        {recordings.map((rec) => (\r\n          <li key={rec.id} className=\"border p-2 rounded flex justify-between\">\r\n            <span>{rec.filename}</span>\r\n            <a\r\n              href={`https://amberflux-backend.onrender.com/api/recordings/${rec.id}`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"text-blue-600 underline\"\r\n            >\r\n              Play\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}